
import React, { useState } from "react";
import appIcon from '../../assets/appicon.png';
import { useNavigate } from "react-router-dom";
import { useVatTu } from '../../contexts/VatTuContext';

const sidebarItems = [
  { label: "Trang ch·ªß", icon: "üè†", route: "/main" },
  { label: "Gi·∫•y kh√°m b·ªánh", icon: "üìÑ", route: "/qlgkb" },
  { label: "B·ªánh nh√¢n", icon: "üë§", route: "/qlbenhnhan" },
  { label: "ƒê∆°n thu·ªëc", icon: "üìù", route: "/qldonthuoc" },
  { label: "Thu·ªëc", icon: "‚ûï", route: "/thuoc" },
  { label: "V·∫≠t t∆∞", icon: "üîß", route: "/qlvattu" },
  { label: "H·ªó tr·ª£ k·ªπ thu·∫≠t", icon: "üí°", route: "/hotro" },
  { label: "C√†i ƒë·∫∑t", icon: "‚öôÔ∏è", route: "/caidat" },
];

const storageOptions = [
  "T·ªß v·∫≠t t∆∞ 1", "T·ªß v·∫≠t t∆∞ 2", "T·ªß v·∫≠t t∆∞ 3", "T·ªß v·∫≠t t∆∞ 4", "T·ªß v·∫≠t t∆∞ 5"
];
const typeOptions = [
  "Ti√™u hao d√πng 1 l·∫ßn",
  "Ti√™u hao nhi·ªÅu l·∫ßn",
  "D·ª•ng c·ª• h·ªó tr·ª£ kh√°m",
  "Thi·∫øt b·ªã vƒÉn ph√≤ng"
];

const currentUser = { email: "admin@gmail.com", password: "1234" };

function QLVatTu() {
  const navigate = useNavigate();
  const { vatTuList, deleteVatTu, updateVatTu } = useVatTu();
  const [active, setActive] = useState("V·∫≠t t∆∞");
  const [menuOpen, setMenuOpen] = useState(false);
  const [search, setSearch] = useState("");
  const [deleteIdx, setDeleteIdx] = useState<number|null>(null);
  const [deletePassword, setDeletePassword] = useState("");
  const [deleteError, setDeleteError] = useState("");
  const [deleteSuccess, setDeleteSuccess] = useState(false);

  // C√°c l·ª±a ch·ªçn cho t√™n v·∫≠t t∆∞ theo lo·∫°i
  const nameOptionsByType: Record<string, string[]> = {
    "Ti√™u hao d√πng 1 l·∫ßn": [
      "GƒÉng tay cao su",
      "GƒÉng tay nitrile",
      "Kh·∫©u trang 3 l·ªõp",
      "Kim ti√™m 23G/25G",
      "·ªêng ti√™m 1ml",
      "·ªêng ti√™m 3ml",
      "·ªêng ti√™m 5ml",
      "G·∫°c v√¥ tr√πng",
      "B√¥ng th·∫•m",
      "BƒÉng cu·ªôn",
      "·ªêng nghi·ªám m√°u",
      "Que th·ª≠ ƒë∆∞·ªùng huy·∫øt",
      "Que th·ª≠ n∆∞·ªõc ti·ªÉu"
    ],
    "Ti√™u hao nhi·ªÅu l·∫ßn": [
      "C·ªìn 70 ƒë·ªô",
      "Chlorhexidine",
      "Gel r·ª≠a tay",
      "KhƒÉn lau tay",
      "Gi·∫•y kh√°m b·ªánh",
      "Gi·∫•y x√©t nghi·ªám",
      "TƒÉm b√¥ng v√¥ tr√πng",
      "Que ƒë√® l∆∞·ª°i g·ªó"
    ],
    "D·ª•ng c·ª• h·ªó tr·ª£ kh√°m": [
      "ƒê√®n soi tai",
      "G∆∞∆°ng soi h·ªçng",
      "·ªêng n·ªôi soi nh·ªè",
      "M√°y ƒëo huy·∫øt √°p ƒëi·ªán t·ª≠",
      "M√°y ƒëo huy·∫øt √°p th·ªßy ng√¢n",
      "·ªêng nghe y t·∫ø 1 ƒë·∫ßu",
      "·ªêng nghe y t·∫ø 2 ƒë·∫ßu",
      "Glucometer",
      "Que th·ª≠ ƒë∆∞·ªùng huy·∫øt",
      "Nhi·ªát k·∫ø h·ªìng ngo·∫°i",
      "Nhi·ªát k·∫ø ƒëi·ªán t·ª≠",
      "M√°y x√©t nghi·ªám n∆∞·ªõc ti·ªÉu",
      "M√°y test nhanh n∆∞·ªõc ti·ªÉu"
    ],
    "Thi·∫øt b·ªã vƒÉn ph√≤ng": [
      "M√°y in phi·∫øu kh√°m",
      "Gi·∫•y in toa thu·ªëc",
      "Th·∫ª t·ª´",
      "H·ªì s∆°",
      "S·ªï kh√°m",
      "ƒê∆°n thu·ªëc",
      "H√≥a ƒë∆°n"
    ]
  };

  const handleNameChange = (idx: number, value: string) => {
    const vatTu = vatTuList[idx];
    if (vatTu) {
      updateVatTu(vatTu.id, { name: value });
    }
  };

  const handleSearch = () => {
    return vatTuList.filter(t => t.name.toLowerCase().includes(search.toLowerCase()));
  };

  const handleDelete = (idx: number) => {
    setDeleteIdx(idx);
    setDeletePassword("");
    setDeleteError("");
  };

  const confirmDelete = () => {
    if (deletePassword === currentUser.password && deleteIdx !== null) {
      const vatTu = vatTuList[deleteIdx];
      if (vatTu) {
        deleteVatTu(vatTu.id);
      }
      setDeleteIdx(null);
      setDeletePassword("");
      setDeleteError("");
      setDeleteSuccess(true);
      setTimeout(() => setDeleteSuccess(false), 2000);
    } else {
      setDeleteError("Sai m·∫≠t kh·∫©u. Vui l√≤ng th·ª≠ l·∫°i.");
    }
  };

  const cancelDelete = () => {
    setDeleteIdx(null);
    setDeletePassword("");
    setDeleteError("");
  };

  return (
    <div style={{ minHeight: '100vh', width: '100vw', display: 'flex', background: '#f5f6fa', position: 'relative' }}>
      {/* Th√¥ng b√°o x√≥a th√†nh c√¥ng */}
      {deleteSuccess && (
        <div style={{ position: 'fixed', top: 24, right: 24, zIndex: 1000 }}>
          <div style={{ background: '#1ec9a4', color: '#fff', padding: '14px 32px', borderRadius: 8, fontWeight: 500, fontSize: 16, boxShadow: '0 2px 8px #0002' }}>
            X√≥a V·∫≠t T∆∞ th√†nh c√¥ng
          </div>
        </div>
      )}
      {/* Sidebar */}
      <div style={{ width: 250, minWidth: 70, background: '#2d4a7a', color: '#fff', display: 'flex', flexDirection: 'column', alignItems: 'center', paddingTop: 24, position: 'relative' }}>
        <img src={appIcon} alt="logo" style={{ width: '70%', maxWidth: 90, minWidth: 50, borderRadius: '50%', marginBottom: 24, background: '#fff', objectFit: 'cover' }} />
        {sidebarItems.map(item => (
          <div
            key={item.label}
            onClick={() => navigate(item.route)}
            style={{
              width: '90%',
              display: 'flex',
              alignItems: 'center',
              gap: 12,
              padding: '12px 18px',
              marginBottom: 8,
              borderRadius: 8,
              background: active === item.label ? '#fff' : 'transparent',
              color: active === item.label ? '#2d4a7a' : '#fff',
              fontWeight: active === item.label ? 600 : 400,
              cursor: 'pointer',
              boxShadow: active === item.label ? '0 2px 8px #0001' : 'none',
              transition: 'all 0.2s',
              fontSize: '1rem',
            }}
          >
            <span style={{ fontSize: 20, color: active === item.label ? '#2d4a7a' : '#e0e6ef', filter: active === item.label ? '' : 'grayscale(1)' }}>{item.icon}</span>
            <span style={{ display: 'inline-block', whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' }}>{item.label}</span>
          </div>
        ))}
      </div>
      {/* Main content */}
      <div style={{ flex: 1, padding: '32px 0 0 0', minWidth: 0, display: 'flex', flexDirection: 'column' }}>
        {/* Popup x√°c nh·∫≠n m·∫≠t kh·∫©u khi x√≥a */}
        {deleteIdx !== null && (
          <div style={{ position: 'fixed', top: 0, left: 0, width: '100vw', height: '100vh', background: '#0006', zIndex: 999, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>
            <div style={{ background: '#fff', borderRadius: 12, padding: 32, minWidth: 320, boxShadow: '0 2px 12px #0003', display: 'flex', flexDirection: 'column', gap: 16 }}>
              <div style={{ fontWeight: 600, fontSize: 18, marginBottom: 8 }}>X√°c nh·∫≠n x√≥a v·∫≠t t∆∞</div>
              <div style={{ fontSize: 15 }}>Vui l√≤ng nh·∫≠p m·∫≠t kh·∫©u t√†i kho·∫£n ƒë·ªÉ x√°c nh·∫≠n x√≥a v·∫≠t t∆∞.</div>
              <input
                type="password"
                value={deletePassword}
                onChange={e => setDeletePassword(e.target.value)}
                placeholder="Nh·∫≠p m·∫≠t kh·∫©u"
                style={{ padding: '10px 14px', borderRadius: 8, border: '1px solid #ccc', fontSize: 16 }}
              />
              {deleteError && <div style={{ color: 'red', fontSize: 14 }}>{deleteError}</div>}
              <div style={{ display: 'flex', gap: 12, marginTop: 8 }}>
                <button type="button" style={{ background: '#1ec9a4', color: '#fff', border: 'none', borderRadius: 8, padding: '10px 28px', fontWeight: 500, fontSize: 16, cursor: 'pointer' }} onClick={confirmDelete}>X√°c nh·∫≠n</button>
                <button type="button" style={{ background: '#eee', color: '#333', border: 'none', borderRadius: 8, padding: '10px 28px', fontWeight: 500, fontSize: 16, cursor: 'pointer' }} onClick={cancelDelete}>H·ªßy</button>
              </div>
            </div>
          </div>
        )}
        {/* Top right menu */}
        <div style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center', gap: 16, flexWrap: 'wrap', padding: '0 32px' }}>
          <img src={appIcon} alt="logo" style={{ width: 40, borderRadius: '50%' }} />
          <span style={{ fontWeight: 500, fontSize: 18, color: '#2d4a7a' }}>M·∫°nh</span>
          <div style={{ position: 'relative' }}>
            <button
              style={{ background: 'none', border: 'none', cursor: 'pointer', fontSize: 18 }}
              onClick={() => setMenuOpen(!menuOpen)}
            >
              ‚ñº
            </button>
            {menuOpen && (
              <div style={{ position: 'absolute', right: 0, top: 32, background: '#fff', boxShadow: '0 2px 8px #0002', borderRadius: 8, minWidth: 220, zIndex: 10 }}>
                <div onClick={() => navigate('/profile')}
                  style={{ padding: '12px 28px', cursor: 'pointer', borderBottom: '1px solid #eee', display: 'flex', alignItems: 'center', gap: 12, whiteSpace: 'nowrap' }}>
                  <span>üë§</span> Th√¥ng tin c√° nh√¢n
                </div>
                <div onClick={() => navigate('/changepassword')}
                  style={{ padding: '12px 28px', cursor: 'pointer', borderBottom: '1px solid #eee', display: 'flex', alignItems: 'center', gap: 12, whiteSpace: 'nowrap' }}>
                  <span>üîë</span> ƒê·ªïi m·∫≠t kh·∫©u
                </div>
                <div onClick={() => navigate('/login')}
                  style={{ padding: '12px 28px', cursor: 'pointer', color: 'red', display: 'flex', alignItems: 'center', gap: 12, whiteSpace: 'nowrap' }}>
                  <span>‚èª</span> Tho√°t
                </div>
              </div>
            )}
          </div>
        </div>
        {/* Title & Search & Add */}
        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', padding: '0 32px', marginTop: 18 }}>
          <div style={{ fontSize: '2rem', fontWeight: 600 }}>Danh s√°ch v·∫≠t t∆∞</div>
          <button type="button" style={{ background: '#1ec9a4', color: '#fff', border: 'none', borderRadius: 8, padding: '12px 32px', fontWeight: 500, fontSize: 18, cursor: 'pointer' }} onClick={() => navigate('/qlvattu/tao')}>+ Th√™m v·∫≠t t∆∞</button>
        </div>
        <div style={{ padding: '0 32px', marginTop: 18, marginBottom: 24 }}>
          <div style={{ background: '#fff', borderRadius: 16, padding: 32, maxWidth: 1200, margin: '0 auto', boxShadow: '0 2px 12px #0001' }}>
            <div style={{ display: 'flex', alignItems: 'center', gap: 12, marginBottom: 18 }}>
              <input value={search} onChange={e => setSearch(e.target.value)} placeholder="Nh·∫≠p t√™n v·∫≠t t∆∞" style={{ padding: '10px 14px', borderRadius: 8, border: '1px solid #ccc', fontSize: 16, width: 240 }} />
              <button type="button" style={{ background: '#1ec9a4', color: '#fff', border: 'none', borderRadius: 8, padding: '10px 28px', fontWeight: 500, fontSize: 16, cursor: 'pointer' }} onClick={() => {}}>
                T√¨m ki·∫øm
              </button>
            </div>
            <table style={{ width: '100%', borderCollapse: 'collapse', fontSize: 12 }}>
              <thead>
                <tr style={{ background: '#e3f2fd' }}>
                  <th style={{ padding: '8px 12px', border: '1px solid #ddd', width: 40 }}>STT</th>
                  <th style={{ padding: '8px 12px', border: '1px solid #ddd', width: 80 }}>M√£</th>
                  <th style={{ padding: '8px 12px', border: '1px solid #ddd', width: 220 }}>T√™n v·∫≠t t∆∞</th>
                  <th style={{ padding: '8px 12px', border: '1px solid #ddd', width: 70 }}>Gi√° (VNƒê)</th>
                  <th style={{ padding: '8px 12px', border: '1px solid #ddd', width: 100 }}>Lo·∫°i v·∫≠t t∆∞</th>
                  <th style={{ padding: '8px 12px', border: '1px solid #ddd', width: 120 }}>V·ªã tr√≠ l∆∞u tr·ªØ</th>
                  <th style={{ padding: '8px 12px', border: '1px solid #ddd', width: 100 }}>Ng√†y nh·∫≠p</th>
                  <th style={{ padding: '8px 12px', border: '1px solid #ddd', width: 100 }}>H·∫°n s·ª≠ d·ª•ng</th>
                  <th style={{ padding: '8px 12px', border: '1px solid #ddd', width: 100 }}>S·ªë l∆∞·ª£ng c√≤n (c√°i)</th>
                  <th style={{ padding: '8px 12px', border: '1px solid #ddd', width: 120 }}>Nh√† cung c·∫•p</th>
                  <th style={{ padding: '8px 4px', border: '1px solid #ddd', width: 60 }}>H√†nh ƒë·ªông</th>
                </tr>
              </thead>
              <tbody>
                {handleSearch().map((vattu, idx) => {
                  // T√≠nh m√†u h·∫°n s·ª≠ d·ª•ng
                  let expiryColor = undefined;
                  if (vattu.expiry) {
                    const now = new Date();
                    const [day, month, year] = vattu.expiry.split("/").map(Number);
                    const expiryDate = new Date(year, month - 1, day);
                    const diffMonths = (expiryDate.getFullYear() - now.getFullYear()) * 12 + (expiryDate.getMonth() - now.getMonth());
                    if (diffMonths < 6 || (diffMonths === 6 && expiryDate.getDate() < now.getDate())) {
                      expiryColor = 'red';
                    }
                  }
                  return (
                    <tr key={vattu.id}>
                      <td style={{ padding: '8px 12px', border: '1px solid #ddd' }}>{idx + 1}</td>
                      <td style={{ padding: '8px 12px', border: '1px solid #ddd' }}>{vattu.id}</td>
                      <td style={{ padding: '8px 12px', border: '1px solid #ddd', width: 220 }}>
                        {nameOptionsByType[vattu.type] ? (
                          <select value={vattu.name} style={{ padding: '4px 8px', borderRadius: 6, border: '1px solid #ccc', fontSize: 12, background: '#fff' }} onChange={e => handleNameChange(idx, e.target.value)}>
                            {nameOptionsByType[vattu.type].map(opt => (
                              <option key={opt} value={opt}>{opt}</option>
                            ))}
                          </select>
                        ) : (
                          vattu.name
                        )}
                      </td>
                      <td style={{ padding: '8px 12px', border: '1px solid #ddd', width: 70 }}>{vattu.price}</td>
                      <td style={{ padding: '8px 12px', border: '1px solid #ddd', width: 100 }}>
                        <select value={vattu.type} style={{ padding: '4px 8px', borderRadius: 6, border: '1px solid #ccc', fontSize: 12, background: '#fff' }} onChange={e => {
                          const newType = e.target.value;
                          const newName = nameOptionsByType[newType]?.[0] || vattu.name;
                          updateVatTu(vattu.id, { type: newType, name: newName });
                        }}>
                          {typeOptions.map(opt => (
                            <option key={opt} value={opt}>{opt}</option>
                          ))}
                        </select>
                      </td>
                      <td style={{ padding: '8px 12px', border: '1px solid #ddd', width: 120 }}>
                        <select value={vattu.storage} style={{ padding: '4px 8px', borderRadius: 6, border: '1px solid #ccc', fontSize: 12, background: '#fff' }} onChange={e => updateVatTu(vattu.id, { storage: e.target.value })}>
                          {storageOptions.map(opt => (
                            <option key={opt} value={opt}>{opt}</option>
                          ))}
                        </select>
                      </td>
                      <td style={{ padding: '8px 12px', border: '1px solid #ddd', width: 100 }}>{vattu.dateImport}</td>
                      <td style={{ padding: '8px 12px', border: '1px solid #ddd', width: 100, color: expiryColor }}>{vattu.expiry}</td>
                      <td style={{ padding: '8px 12px', border: '1px solid #ddd', width: 100, color: vattu.stock ? 'red' : undefined }}>{vattu.stock}</td>
                      <td style={{ padding: '8px 12px', border: '1px solid #ddd', width: 120 }}>{vattu.supplier}</td>
                      <td style={{ padding: '8px 4px', border: '1px solid #ddd', width: 60, textAlign: 'center', verticalAlign: 'middle' }}>
                        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', gap: 8 }}>
                          <button type="button" style={{ background: 'none', border: 'none', cursor: 'pointer', color: '#1ec9a4', fontSize: 20 }} title="S·ª≠a" onClick={() => navigate('/qlvattu/sua', { state: { vatTu: vattu } })}>
                            <span role="img" aria-label="edit">‚úèÔ∏è</span>
                          </button>
                          <button type="button" style={{ background: 'none', border: 'none', cursor: 'pointer', color: 'red', fontSize: 20 }} title="X√≥a" onClick={() => handleDelete(idx)}>
                            <span role="img" aria-label="delete">üóëÔ∏è</span>
                          </button>
                        </div>
                      </td>
                    </tr>
                  );
                })}
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  );
}

export default QLVatTu;
